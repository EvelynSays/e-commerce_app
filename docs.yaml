openapi: 3.0.0
info:
  title: API Documentation
  description: API documentation for the application
  version: 1.0.0

servers:
  - url: http://localhost:3000/api

paths:
  # Users
  /users/register:
    post:
      tags:
        - Users
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: password123
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
        '404':
          description: User not found
        '500':
          description: Internal server error

    put:
      tags:
        - Users
      summary: Update user information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Invalid input
        '404':
          description: User not found
        '500':
          description: Internal server error

    delete:
      tags:
        - Users
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found
        '500':
          description: Internal server error

  # Auth
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /auth/login:
    post:
      tags:
        - Auth
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Invalid input
        '401':
          description: Invalid credentials
        '500':
          description: Internal server error

  # Products
  /products:
    get:
      tags:
        - Products
      summary: Get all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                      format: float
                    stock:
                      type: integer
                    category_id:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
        '500':
          description: Internal server error

    post:
      tags:
        - Products
      summary: Add a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                stock:
                  type: integer
                category_id:
                  type: integer
                created_at:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Product added successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /products/{id}:
    get:
      tags:
        - Products
      summary: Get product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  stock:
                    type: integer
                  category_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
        '404':
          description: Product not found
        '500':
          description: Internal server error

    put:
      tags:
        - Products
      summary: Update a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                stock:
                  type: integer
                category_id:
                  type: integer
      responses:
        '200':
          description: Product updated successfully
        '400':
          description: Invalid input
        '404':
          description: Product not found
        '500':
          description: Internal server error

    delete:
      tags:
        - Products
      summary: Delete a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found
        '500':
          description: Internal server error

  # Carts
  /carts/{userId}:
    get:
      tags:
        - Carts
      summary: Get cart items for a specific user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    product_id:
                      type: integer
                    quantity:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                      format: float
        '404':
          description: Cart not found
        '500':
          description: Internal server error

    post:
      tags:
        - Carts
      summary: Add an item to the cart for a specific user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                quantity:
                  type: integer
      responses:
        '200':
          description: Item added to cart successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

    delete:
      tags:
        - Carts
      summary: Delete an item from the cart for a specific user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: product_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Item removed from cart successfully
        '400':
          description: Invalid input
        '404':
          description: Item not found
        '500':
          description: Internal server error

  /carts/{cartId}/checkout:
    post:
      tags:
        - Carts
      summary: Checkout the cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                total_price:
                  type: number
                  format: float
      responses:
        '200':
          description: Cart checked out successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  # Orders
  /orders:
    get:
      tags:
        - Orders
      summary: Get all orders
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    total_price:
                      type: number
                      format: float
                    status:
                      type: string
                    created_at:
                      type: string
                      format: date-time
        '500':
          description: Internal server error

    post:
      tags:
        - Orders
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                total_price:
                  type: number
                  format: float
                status:
                  type: string
      responses:
        '201':
          description: Order created successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  total_price:
                    type: number
                    format: float
                  status:
                    type: string
                  created_at:
                    type: string
                    format: date-time
        '404':
          description: Order not found
        '500':
          description: Internal server error

    put:
      tags:
        - Orders
      summary: Update an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                total_price:
                  type: number
                  format: float
                status:
                  type: string
      responses:
        '200':
          description: Order updated successfully
        '400':
          description: Invalid input
        '404':
          description: Order not found
        '500':
          description: Internal server error

    delete:
      tags:
        - Orders
      summary: Delete an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order deleted successfully
        '404':
          description: Order not found
        '500':
          description: Internal server error
